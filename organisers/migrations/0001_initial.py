# Generated by Django 5.2 on 2025-05-01 15:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(choices=[('Windhoek', 'Windhoek'), ('Swakopmund', 'Swakopmund'), ('Oshakati', 'Oshakati'), ('Walvis Bay', 'Walvis Bay'), ('Luderitz', 'Luderitz'), ('Rehoboth', 'Rehoboth'), ('Rundu', 'Rundu'), ('Tsumeb', 'Tsumeb'), ('Katima Mulilo', 'Katima Mulilo'), ('Otjiwarongo', 'Otjiwarongo'), ('Gobabis', 'Gobabis'), ('Keetmanshoop', 'Keetmanshoop'), ('Mariental', 'Mariental'), ('Outapi', 'Outapi'), ('Grootfontein', 'Grootfontein'), ('Henties Bay', 'Henties Bay'), ('Okahandja', 'Okahandja'), ('Ongwediva', 'Ongwediva'), ('Bintheb', 'Bintheb'), ('Usakos', 'Usakos'), ('Aroab', 'Aroab'), ('Sossusvlei', 'Sossusvlei'), ('Linyanti', 'Linyanti'), ('Uis', 'Uis'), ('Pioneers Park', 'Pioneers Park'), ('Maltahohe', 'Maltahohe'), ('Aminuis', 'Aminuis'), ('Ndiyona', 'Ndiyona'), ('Oshikuku', 'Oshikuku'), ('Kamanjab', 'Kamanjab'), ('Eiseb', 'Eiseb'), ('Witvlei', 'Witvlei'), ('Ruacana', 'Ruacana'), ('Omatako', 'Omatako'), ('Sesfontein', 'Sesfontein'), ('Mokuru', 'Mokuru'), ('Opuwo', 'Opuwo')], max_length=200)),
                ('venue', models.CharField(blank=True, max_length=200)),
                ('category', models.CharField(choices=[('Sports', 'Sports'), ('Music', 'Music'), ('Conference', 'Conference'), ('Festival', 'Festival'), ('Exhibition', 'Exhibition'), ('Workshop', 'Workshop'), ('Seminar', 'Seminar'), ('Networking', 'Networking'), ('Theater', 'Theater'), ('Art', 'Art'), ('Charity', 'Charity'), ('Concert', 'Concert'), ('Fundraiser', 'Fundraiser'), ('Comedy', 'Comedy'), ('Dance', 'Dance'), ('Food & Drink', 'Food & Drink'), ('Family', 'Family'), ('Business', 'Business'), ('Technology', 'Technology'), ('Education', 'Education'), ('Health & Wellness', 'Health & Wellness')], max_length=50)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('service_fee_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('ticket_name', models.CharField(default='General Admission', max_length=100)),
                ('ticket_description', models.TextField(blank=True)),
                ('ticket_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ticket_quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('ticket_quantity_sold', models.PositiveIntegerField(default=0)),
                ('sales_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('sales_end', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(blank=True, choices=[('mtc', 'MTC Money'), ('telecom', 'Telecom Pay'), ('card', 'Credit/Debit Card'), ('bank', 'Bank Transfer')], max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='organisers.event')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('special_requirements', models.TextField(blank=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendees', to='organisers.order')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='organisers.event')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='organisers.order')),
            ],
        ),
        migrations.CreateModel(
            name='EventTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=20, unique=True)),
                ('qr_code', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('valid', 'Valid'), ('used', 'Used'), ('cancelled', 'Cancelled')], default='valid', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='organisers.attendee')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='organisers.orderitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15)),
                ('bank_name', models.CharField(max_length=50)),
                ('account_number', models.CharField(max_length=20)),
                ('branch_code', models.CharField(max_length=10)),
                ('verified', models.BooleanField(default=False)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisers.organizer'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(choices=[('mtc', 'MTC Money'), ('telecom', 'Telecom Pay'), ('card', 'Credit/Debit Card'), ('bank', 'Bank Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('payment_details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='payment', to='organisers.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('reference', models.CharField(max_length=100)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organisers.event')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisers.organizer')),
            ],
            options={
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('max_uses', models.PositiveIntegerField()),
                ('times_used', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('min_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organisers.event')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='promo_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organisers.promocode'),
        ),
        migrations.CreateModel(
            name='Purchaser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='purchaser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='organisers.purchaser'),
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organisers.device')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='check_ins', to='organisers.eventticket')),
            ],
            options={
                'ordering': ['-check_in_time'],
                'unique_together': {('ticket', 'is_duplicate')},
            },
        ),
        migrations.AddIndex(
            model_name='eventticket',
            index=models.Index(fields=['ticket_number'], name='organisers__ticket__c3d473_idx'),
        ),
        migrations.AddIndex(
            model_name='eventticket',
            index=models.Index(fields=['qr_code'], name='organisers__qr_code_da5c12_idx'),
        ),
        migrations.AddIndex(
            model_name='eventticket',
            index=models.Index(fields=['status'], name='organisers__status_835945_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start_date'], name='organisers__start_d_7315ec_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['location'], name='organisers__locatio_8f741e_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['category'], name='organisers__categor_349557_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaser',
            index=models.Index(fields=['email'], name='organisers__email_591719_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaser',
            index=models.Index(fields=['phone'], name='organisers__phone_3b812a_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='organisers__order_n_cfdd0c_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='organisers__status_6b5da5_idx'),
        ),
    ]
